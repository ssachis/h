{"version":3,"sources":["RecipeTile.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeTile","recipe","className","onClick","window","open","src","App","useState","query","setquery","recipes","setrecipes","healthLabels","sethealthLabels","url","a","Axios","get","result","data","hits","console","log","onSubmit","e","preventDefault","getRecipes","type","placeholder","value","onChange","target","class","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAEe,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,OAChC,OACI,sBAAKC,UAAU,aAAYC,QAAS,WAChCC,OAAOC,KAAKJ,EAAM,OAAN,MADhB,UAGI,qBAAKC,UAAU,SAASI,IAAKL,EAAM,OAAN,QACjC,mBAAGC,UAAU,UAAb,SAAyBD,EAAM,OAAN,WC0DlBM,MA5Df,WACE,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAMG,EAAN,KAAcC,EAAd,KACA,EAAqCJ,mBAAS,SAA9C,mBAAOK,EAAP,KAAoBC,EAApB,KAOIC,EAAG,UALQ,oCAKR,OAAeN,GAAf,OAHO,oBAGP,OAJQ,+CAIR,OAFM,YAEN,OAAiDI,GAV3C,4CAYb,4BAAAG,EAAA,sEACmBC,IAAMC,IAAIH,GAD7B,OACMI,EADN,OAEEP,EAAWO,EAAOC,KAAKC,MACvBC,QAAQC,IAAIJ,EAAOC,MAHrB,4CAZa,sBAuBb,OACE,sBAAKlB,UAAU,MAAf,UACC,2DACA,uBAAMA,UAAU,iBAAiBsB,SARrB,SAACC,GACdA,EAAEC,iBAnBS,mCAoBXC,IAMC,UACC,uBAAQC,KAAK,OACb1B,UAAU,YACT2B,YAAY,oBACbC,MAAOrB,EAAOsB,SAAU,SAACN,GAAD,OAAKf,EAASe,EAAEO,OAAOF,UAC/C,uBAAQF,KAAK,SAAS1B,UAAU,aAAa4B,MAAM,WAGrD,yBAAQ5B,UAAU,kBAAlB,UACE,wBAAQC,QAAU,kBAAIW,EAAgB,UAAtC,mBACA,wBAAQX,QAAU,kBAAIW,EAAgB,eAAtC,wBACA,wBAAQX,QAAU,kBAAIW,EAAgB,UAAtC,mBACA,wBAAQX,QAAU,kBAAIW,EAAgB,eAAtC,wBACA,wBAAQX,QAAU,kBAAIW,EAAgB,gBAAtC,yBACA,wBAAQX,QAAU,kBAAIW,EAAgB,cAAtC,6BAKD,qBAAKmB,MAAM,UAGX,qBAAK/B,UAAU,UAAf,SACES,EAAQuB,KAAI,SAACjC,GACZ,OAAO,cAAED,EAAF,CAAaC,OAAQA,aC5CrBkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.58be1109.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./recipetile.css\"\r\nexport default function RecipeTile({recipe}) {\r\n    return (\r\n        <div className=\"RecipeTile\"onClick={()=>{\r\n            window.open(recipe[\"recipe\" ][\"url\"])\r\n        }}>\r\n            <img className=\"rt_img\" src={recipe[\"recipe\"][\"image\"]}/>\r\n        <p className=\"rt_name\" >{recipe[\"recipe\" ][\"label\"]}</p>\r\n        </div>\r\n    );\r\n}\r\n ","\nimport './App.css';\nimport Axios from \"axios\";\nimport {useState} from \"react\";\nimport RecipeTile from \"./RecipeTile.js\";\n\nfunction App() {\n  const [query,setquery]=useState(\"\");\n  const[recipes,setrecipes]=useState([]);\n  const [healthLabels,sethealthLabels]=useState(\"vegan\")\n\n  const apiURL = \"https://api.edamam.com/search?q=\";\n  const apiKey = \"&app_key=5694759373c7b6d97f52d44a83a0a3e8\t\";\n  const apiId = \"&app_id=adb74951\";\n  const health=\"&health=\";\n \n  var url = `${apiURL}${query}${apiId}${apiKey}${health}${healthLabels}`;\n  \n  async function getRecipes(){\n    var result=await Axios.get(url);\n    setrecipes(result.data.hits);\n    console.log(result.data);\n    \n  }\n  const onSubmit=(e)=>{\n    e.preventDefault();\n    getRecipes();\n  }\n  \n  return (\n    <div className=\"App\">\n     <h1 >Recipe Plaza üçú</h1>\n     <form className=\"app_searchForm\" onSubmit={onSubmit}>\n      < input type=\"text\"\n      className=\"app_input\"\n       placeholder=\"enter ingredients\"\n      value={query} onChange={(e)=>setquery(e.target.value)}/>\n      <input  type=\"submit\" className=\"app_submit\" value=\"search\"/>\n\n\n    <select className=\"app_healthlabel\">\n      <option onClick ={()=>sethealthLabels(\"vegan\")}>vegan</option>\n      <option onClick ={()=>sethealthLabels(\"vegetarian\")}>vegetarian</option>\n      <option onClick ={()=>sethealthLabels(\"paleo\")}>paleo</option>\n      <option onClick ={()=>sethealthLabels(\"dairy-free\")}>dairy-free</option>\n      <option onClick ={()=>sethealthLabels(\"gluten-free\")}>gluten-free</option>\n      <option onClick ={()=>sethealthLabels(\"low-sugar\")}>low-sugar</option>\n    \n    \n    </select>\n     </form>\n     <div class=\"sachi\">\n      \n      </div>\n     <div className=\"app_rec\">\n      {recipes.map((recipe)=>{\n        return < RecipeTile recipe={recipe}/>;\n\n      })}\n     </div>\n\n    </div>\n   \n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}